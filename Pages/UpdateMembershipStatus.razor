@page "/updatememberstatus"
@inject NavigationManager NavigationManager
@using Cw.Data

<style>
    /*form-group {
            margin-bottom: 1rem;
        }
    
        .form-control {
            display: block;
            width: 100%;
            padding: .375rem .75rem;
            font-size: 1rem;
            line-height: 1.5;
            color: #495057;
            background-color: #fff;
            background-clip: padding-box;
            border: 1px solid #ced4da;
            border-radius: .25rem;
            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        }
    
        .btn-primary {
            color: #fff;
            background-color: #007bff;
            border-color: #007bff;
        }
    
        .btn-secondary {
            color: #fff;
            background-color: #6c757d;
            border-color: #6c757d;
        }
    
        .alert-success {
            color: #155724;
            background-color: #d4edda;
            border-color: #c3e6cb;
        }*/
        body {
            background-color: #f8f9fa;
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }
        
        .container {
            max-width: 500px;
            padding: 15px;
            border-radius: 15px;
            background-color: #ffffff;
            box-shadow: 0px 0px 10px rgba(0,0,0,0.1);
        }
        
        h3 {
            text-align: center;
            color: #343a40;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        .form-control {
            border-radius: 5px;
            border: 1px solid #ced4da;
        }
        
        .btn-primary {
            background-color: #007bff;
            color: #ffffff;
            border: none;
            border-radius: 5px;
            transition: background-color 0.5s;
        }
        
        .btn-primary:hover {
            background-color: #0056b3;
        }
        
        .btn-secondary {
            margin-left: 10px;
            background-color: #6c757d;
            color: #ffffff;
            border: none;
            border-radius: 5px;
            transition: background-color 0.5s;
        }
        
        .btn-secondary:hover {
            background-color: #5a6268;
        }
        
        .alert {
            margin-top: 20px;
        }
    </style>

<h3>Update Member Status</h3>

@if (!isPhoneNumberEntered)
{
    <EditForm Model="@phoneNumberModel" OnValidSubmit="@CheckPhoneNumber">
        <div class="form-group">
            <label for="phoneNumber">Enter Phone Number:</label>
            <InputText id="phoneNumber" @bind-Value="phoneNumberModel.PhoneNumber" class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary">Check Phone Number</button>
        <button type="button" class="btn btn-secondary" @onclick="NavigateBack">Back</button>
    </EditForm>
}
else
{
    <EditForm Model="@updateModel" OnValidSubmit="@PerformMemberStatusUpdate">
        <div class="form-group">
            <label for="isRegular">Is Regular:</label>
               <label>
                                    <input type="checkbox" @bind="@currentMemeber.IsRegular" />
                                </label>

        </div>

        <button type="submit" class="btn btn-primary">Update Member Status</button>
    </EditForm>


    @if (isUpdateSuccessful.HasValue)
    {
        <div class="alert @alertClass" role="alert">
            @if (isUpdateSuccessful.Value)
            {
                <p>@alertMessage</p>
            }
            else
            {
                <p>An error occurred while updating the member status.</p>
            }
            <button type="button" class="close" @onclick="ResetUpdateStatus">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
}

@code {
    private PhoneNumberModel phoneNumberModel = new PhoneNumberModel();
    private UpdateMemberModel updateModel = new UpdateMemberModel();
    private bool? isUpdateSuccessful = null;
    private bool isPhoneNumberEntered = false;
    private string alertMessage = "";
    private string alertClass = "";

    private Member currentMemeber;
    private void CheckPhoneNumber()
    {
        string p1 = "D:\\CourseWork\\Members.json";

        if (File.Exists(p1))
        {
            // Read the existing list from the file
            string jsonFromFile = File.ReadAllText(p1);
            List<Member> membersList = JsonSerializer.Deserialize<List<Member>>(jsonFromFile);
            var member = membersList.Find(m => m.PhoneNumber == phoneNumberModel.PhoneNumber);
            // Check if the phone number exists in the members list
            if (member !=null)
            {
                // Set the flag to indicate phone number entered
                isPhoneNumberEntered = true;
                currentMemeber = member;
            }
            else
            {
                // Set the alert message for member not found
                SetAlert("Member not found. Please check the phone number.", "alert-danger");
            }
        }
        else
        {
            // Set the alert message for file not found
            SetAlert("Error: Members file not found.", "alert-danger");
        }
    }

    private void PerformMemberStatusUpdate()
    {
        string p1 = "D:\\CourseWork\\Members.json";

        if (File.Exists(p1))
        {
            // Read the existing list from the file
            string jsonFromFile = File.ReadAllText(p1);
            List<Member> membersList = JsonSerializer.Deserialize<List<Member>>(jsonFromFile);

            // Find the member based on the provided phone number
            Member foundMember = membersList.FirstOrDefault(m => m.PhoneNumber == phoneNumberModel.PhoneNumber);

            if (foundMember != null)
            {

                foundMember.IsRegular = currentMemeber.IsRegular;
                // Serialize the updated list and write to the file
                string updatedJson = JsonSerializer.Serialize(membersList, new JsonSerializerOptions { WriteIndented = true });
                File.WriteAllText(p1, updatedJson);

                // Set the flag to indicate successful update
                isUpdateSuccessful = true;
                SetAlert("Member status updated successfully!", "alert-success");
            }
            else
            {
                // Set the alert message for member not found
                SetAlert("Error: Member not found.", "alert-danger");
            }
        }
        else
        {
            // Set the alert message for file not found
            SetAlert("Error: Members file not found.", "alert-danger");
        }
    }

    private void ResetUpdateStatus()
    {
        // Reset the flags and clear form inputs
        isUpdateSuccessful = null;
        isPhoneNumberEntered = false;
        phoneNumberModel = new PhoneNumberModel();
        updateModel = new UpdateMemberModel();
    }

    private void SetAlert(string message, string cssClass)
    {
        // Set the alert message and class
        alertMessage = message;
        alertClass = cssClass;

        // Reset the alert after a few seconds (you can adjust the delay)
        Task.Delay(5000).ContinueWith(_ =>
        {
            alertMessage = "";
            alertClass = "";
            StateHasChanged();
        });
    }

    public class PhoneNumberModel
    {
        public string PhoneNumber { get; set; }
    }

    public class UpdateMemberModel
    {
        public bool IsRegular { get; set; }
    }
    private void NavigateBack()
    {
        NavigationManager.NavigateTo("/admin");
    }
}
