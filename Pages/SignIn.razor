<!--
    This Razor component represents the login page ("/login") of the POS (Point of Sale) system.
    It includes a form for staff login with username and password fields.
-->
@page "/login"
@inject NavigationManager NavigationManager

@using Cw.Data
@using System.IO

<style>
    /*body {
        background-color: #f8f9fa;
        font-family: Arial, sans-serif;
    }

    .login-container {
        max-width: 500px;
        margin: 0 auto;
        padding: 15px;
        border-radius: 15px;
        background-color: #ffffff;
        box-shadow: 0px 0px 10px rgba(0,0,0,0.1);
    }

    .text-center {
        color: #343a40;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        border-radius: 5px;
        border: 1px solid #ced4da;
    }

    .btn-custom {
        background-color: #007bff;
        color: #ffffff;
        border: none;
        border-radius: 5px;
        transition: background-color 0.5s;
    }

        .btn-custom:hover {
            background-color: #0056b3;
        }

    .error-message {
        color: #dc3545;
        font-size: 0.875em;
    }*/
    body {
        background-color: #f8f9fa;
        font-family: Arial, sans-serif;
    }
    
    .login-container {
        max-width: 500px;
        margin: 0 auto;
        padding: 15px;
        border-radius: 15px;
        background-color: #ffffff;
        box-shadow: 0px 0px 10px rgba(0,0,0,0.1);
    }
    
    .text-center {
        color: #343a40;
    }
    
    .form-group {
        margin-bottom: 15px;
    }
    
    .form-control {
        border-radius: 5px;
        border: 1px solid #ced4da;
    }
    
    .btn-custom {
        background-color: #007bff;
        color: #ffffff;
        border: none;
        border-radius: 5px;
        transition: background-color 0.5s;
    }
    
    .btn-custom:hover {
        background-color: #0056b3;
    }
    
    .error-message {
        color: #dc3545;
        font-size: 0.875em;
    }
</style>
<!-- Display the login form -->
<div class="container login-container">
    <h2 class="text-center">Login</h2>

    <EditForm Model="@staff" OnValidSubmit="@HandleLoginSubmit">
        <div class="form-group">
            <label for="username">Username:</label>
            <InputText id="username" @bind-Value="staff.Username" class="form-control" />
        </div>

        <div class="form-group">
            <label for="password">Password:</label>
            <InputText id="password" @bind-Value="staff.Password" class="form-control" type="password" />
        </div>

        <div class="center-btn">
            <button type="submit" class="btn btn-custom btn-block">Login</button>
        </div>
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="error-message">
                @errorMessage
            </div>
        }
    </EditForm>
</div>

@code {
    // Variables for login form
    private Staff staff = new Staff();
    private AllStaffsList listOfAllStaffs = new();
    private String errorMessage;

    // Method to handle login form submission
    private void HandleLoginSubmit()
    {
        try
        {
            // Check the username and password against your authentication logic
            if (IsValidCredentials(staff.Username, staff.Password))
            {
                // Successful login, redirect to the appropriate page or perform further actions
                // For simplicity, you can redirect to a hypothetical dashboard page
                NavigationManager.NavigateTo("/order");
            }
            else
            {
                // Display an error message for failed login
                errorMessage = "Invalid credentials";
            }
        }
        catch (Exception ex)
        {
            // Log the exception details
            errorMessage = $"Exception: {ex.Message}";
        }
    }

    // Method to check if the provided credentials are valid
    private bool IsValidCredentials(string username, string password)
    {
        if (username == "admin" && password == "admin")
        {
            // If the credentials are admin/admin, navigate to the admin page
            NavigationManager.NavigateTo("/admin");
        }

        string p1 = Path.Combine(System.AppContext.BaseDirectory, "AppData", "AllStaffs.json");
        if (File.Exists(p1))
        {
            string jsonFromFile = File.ReadAllText(p1);
            AllStaffsList list_b = JsonSerializer.Deserialize<AllStaffsList>(jsonFromFile);

            // Check if there is a staff with the provided username and matching password
            return list_b.AllStaffs.Any(s => s.Username == username && s.Password == password);
        }
        else
        {
           
        }
        // Return false if the file does not exist 
        return false;
    }
}
