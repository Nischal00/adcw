<!--
    The Razor component for member registration at the "/registermember" page.
    Users can enter their name and phone number to register as a member.
-->
@page "/registermember"
@using Cw.Data
@using System.IO
@inject NavigationManager NavigationManager

<style>
    .form-group {
        margin-bottom: 1rem;
    }

    .form-control {
        display: block;
        width: 100%;
        padding: .375rem .75rem;
        font-size: 1rem;
        line-height: 1.5;
        color: #495057;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        border-radius: .25rem;
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
    }

    .btn-primary {
        color: #fff;
        background-color: #007bff;
        border-color: #007bff;
    }

    .btn-secondary {
        color: #fff;
        background-color: #6c757d;
        border-color: #6c757d;
    }

    .alert-success {
        color: #155724;
        background-color: #d4edda;
        border-color: #c3e6cb;
    }
</style>

<h3>Member Register</h3>

@if (!isRegistrationSuccessful)
{
    <!-- Display a form for member registration -->
    <EditForm Model="@member" OnValidSubmit="@HandleValidSubmit">
        <div class="form-group">
            <label for="name">Name:</label>
            <InputText id="name" @bind-Value="member.Name" class="form-control" />
        </div>

        <div class="form-group">
            <label for="phoneNumber">Phone Number:</label>
            <InputText id="phoneNumber" @bind-Value="member.PhoneNumber" class="form-control" />
        </div>

        <!-- Buttons to submit the registration and navigate back to the admin page -->
        <button type="submit" class="btn btn-primary">Register Member</button>
        <button type="submit" class="btn btn-secondary" @onclick="NavigateBack">Back</button>
    </EditForm>
}
else
{
    <!-- Display a success message after a successful registration -->
    <div class="alert alert-success" role="alert">
        Member has been registered successfully!
        <!-- Button to close the success message and reset the registration status -->
        <button type="button" class="close" @onclick="ResetRegistrationStatus">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@code {
    // Member object to hold registration information
    private Member member = new Member();
    // Flag to track the registration status
    private bool isRegistrationSuccessful = false;

    // Method to handle the form submission on successful validation
    private void HandleValidSubmit()
    {
        // File path for storing member information
        string p1 = "D:\\CourseWork\\Members.json";

        // Check if the file exists
        if (!File.Exists(p1))
        {
            // If the file doesn't exist, create a new list of members and save to the file
            List<Member> membersList = new List<Member>();
            membersList.Add(member);

            string json = JsonSerializer.Serialize(membersList, new JsonSerializerOptions { WriteIndented = true });
            File.WriteAllText(p1, json);
        }
        else
        {
            // If the file exists, read the existing list, add the new member, and save the updated list
            string jsonFromFile = File.ReadAllText(p1);
            List<Member> membersList = JsonSerializer.Deserialize<List<Member>>(jsonFromFile);
            membersList.Add(member);

            string updatedJson = JsonSerializer.Serialize(membersList, new JsonSerializerOptions { WriteIndented = true });
            File.WriteAllText(p1, updatedJson);
        }

        // Set the flag to indicate successful registration
        isRegistrationSuccessful = true;
    }

    // Method to reset the registration status and clear the form inputs
    private void ResetRegistrationStatus()
    {
        // Reset the flag when the user closes the confirmation alert
        isRegistrationSuccessful = false;

        member.Name=null;
        member.PhoneNumber = null;
    }

    // Method to navigate back to the admin page
    private void NavigateBack()
    {
        NavigationManager.NavigateTo("/admin");
    }
}
